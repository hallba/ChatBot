id: exploring_the_interface
title: Exploring the interface
description: >-
  This tutorial will introduce you to the Bio-Model Analyzer and allow you to
  explore its tools.
  It takes around 10-15 minutes.
  When you've successfuly completed the tutorial, you will know how to define
  and use model states and temporal properties.
steps:
    - text: >-
        The Bio-Model Analyzer is a biological modelling tool that will allow you 
        to create sketches of biological systems and define its properties. One of 
        its main aims is to check for model stabilization, however in this tutorial 
        you will be introduced to LTL and how it might be useful for querying your 
        model. 

    - text: >- 
        Linear Temporal Logic (LTL) is a modal temporal logic, and it will help us 
        define an infinite sequence of states. It is useful within the BMA as it 
        allows us to query paths, and how current paths may change or be affected
        in the future. 
    
    - text: >-
        Now we will be looking at the features provided by the interface and how 
        you may be using them.

    - text: >- 
        As you will be working with various models, it is important that you save changes
        and keep a copy, so that they can be used later. Models in the BMA are saved
        as a JSON file. To save a copy, or use previously created models you can use the 
        import and export features which can be accessed on the left hand side as shown.
        
        NOTE: Throughout the tutorials, you will be presented with images that represent 
        what each step should look like, refer back to these to make sure you are on the 
        right track.

      image: import_export.png
    
    - text: >- 
        Here's a task for you, create a simple model that consists of a cell with three 
        intracellular proteins 'x', 'y' and 'z' that each range from 0 to 4. 'x' must have an activating 
        relationship towards 'y', 'y' needs an activating relationship towards 'z', and 'z' needs 
        inhibiting relationship towards 'x'. See the image below to match your structure, or 
        use the model already created using the link below. 

      image: toy_model.png
      model: ToyModelStable.json 
     
    - text: >-
        Now that you have a model ready, you can start using the LTL editor. The LTL editor 
        can be found on the right hand side of the interface, and allows you to create states 
        and define temporal properties. 

      image: open_ltl_interface.png

    - text: >-
        Lets start by assigning values to the intracellular proteins, so we can later use them 
        in our queries. From the LTL editor, click on the upper plus sign, this should open 
        a new tab. Here assign 'x = 1' as state 'A' and 'y = 1' to state 'B'. NOTE: When creating 
        new states, use the upper plus sign. 

      image: states_ab.png

    - text: >-
        Now that the states have been defined, we can use them in our LTL queries. Let's start 
        with a basic one to get you familiarised with the interface. Go back to the LTL editor 
        and click on the lower '+' sign under temporal properties. 

      image: open_ltl_interface.png

    - text: >-
        States and operators have all been defined above the canvas, you can just drag and drop 
        them to use them. Create a query that states 'A AND B', check the image below to see how you 
        have progressed.
        NOTE: Oscillations and fixed points can also be tested by using the built-in states.
        Also, if you need to delete a query/state/operator drag it towards the bottom of the 
        canvas into the recycle bin.

      image: create_aandb.png 

    - text: >- 
        Change the number of steps you want it to test for (default is 10) and test the query. 
        As you can see the query now has green and red stripes. Green indicates true and red is 
        for false cases. In this case we have traces of both true and false. Click open to examine 
        the restuls, both true and false cases can be seen. 

      image: run_aandb.png 

    - text: >-
        From the results we can see the simulation has returned a case where both 'A' and 'B' are 
        1, and the results for the 10 steps can be seen. 
        NOTE: Figures highlighted in yellow indicate a stable state.

    - text: >-
        If you faced difficulty following the tutorial, access the complete model using the link 
        below:

        model: exploring_interface.json
        
    - text: >-
        You have now come to the end of the 'Exploring the interface' tutorial, and you should be 
        comfortable with using the different features provided by the interface. To learn how LTL may 
        be useful in querying your model please visit the 3 tutorials How to use; Boolean, temporal 
        and advanced temporal operators. 